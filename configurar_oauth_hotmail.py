#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
CONFIGURACI√ìN OAUTH2 PARA HOTMAIL/OUTLOOK
==========================================

Microsoft ha deshabilitado la autenticaci√≥n b√°sica para Hotmail/Outlook.
Necesitamos usar OAuth2 para que funcione.

PASOS PARA CONFIGURAR:
1. Ir a https://portal.azure.com
2. Crear una nueva aplicaci√≥n
3. Configurar permisos para Microsoft Graph
4. Obtener Client ID y Client Secret
5. Configurar redirect URI
6. Generar token de acceso

ALTERNATIVA M√ÅS SIMPLE:
Usar una cuenta de Gmail que s√≠ permite autenticaci√≥n b√°sica
"""

import os
import json
from datetime import datetime, timedelta

def mostrar_instrucciones_oauth():
    """Mostrar instrucciones detalladas para configurar OAuth2"""
    
    print("üîê CONFIGURACI√ìN OAUTH2 PARA HOTMAIL/OUTLOOK")
    print("=" * 60)
    print()
    print("‚ùå PROBLEMA IDENTIFICADO:")
    print("   Microsoft ha deshabilitado la autenticaci√≥n b√°sica")
    print("   para Hotmail/Outlook. El error 'basic authentication is disabled'")
    print("   confirma esto.")
    print()
    print("‚úÖ SOLUCIONES DISPONIBLES:")
    print()
    print("1Ô∏è‚É£ CONFIGURAR OAUTH2 (COMPLEJO):")
    print("   ‚Ä¢ Crear aplicaci√≥n en Azure Portal")
    print("   ‚Ä¢ Configurar permisos Microsoft Graph")
    print("   ‚Ä¢ Obtener tokens de acceso")
    print("   ‚Ä¢ Implementar flujo OAuth2")
    print()
    print("2Ô∏è‚É£ USAR CUENTA GMAIL (RECOMENDADO):")
    print("   ‚Ä¢ Gmail permite autenticaci√≥n b√°sica")
    print("   ‚Ä¢ Configuraci√≥n m√°s simple")
    print("   ‚Ä¢ Funciona inmediatamente")
    print()
    print("3Ô∏è‚É£ USAR APP PASSWORD (SI EST√Å DISPONIBLE):")
    print("   ‚Ä¢ Verificar si la cuenta tiene 2FA habilitado")
    print("   ‚Ä¢ Generar contrase√±a de aplicaci√≥n")
    print("   ‚Ä¢ Usar esa contrase√±a en lugar de la normal")
    print()
    
    return mostrar_opciones()

def mostrar_opciones():
    """Mostrar opciones disponibles"""
    
    print("üéØ ¬øQU√â QUIERES HACER?")
    print("=" * 40)
    print("1. Configurar OAuth2 (requiere Azure)")
    print("2. Cambiar a cuenta Gmail")
    print("3. Verificar si hay App Password disponible")
    print("4. Salir")
    print()
    
    while True:
        try:
            opcion = input("Selecciona una opci√≥n (1-4): ").strip()
            if opcion in ['1', '2', '3', '4']:
                return opcion
            else:
                print("‚ùå Opci√≥n inv√°lida. Selecciona 1, 2, 3 o 4.")
        except KeyboardInterrupt:
            print("\n\nüëã ¬°Hasta luego!")
            return '4'

def configurar_oauth2():
    """Configurar OAuth2 para Hotmail"""
    
    print("\nüîê CONFIGURACI√ìN OAUTH2")
    print("=" * 30)
    print()
    print("‚ö†Ô∏è  ADVERTENCIA: Esta opci√≥n es compleja y requiere:")
    print("   ‚Ä¢ Cuenta de Azure (gratuita)")
    print("   ‚Ä¢ Conocimientos t√©cnicos avanzados")
    print("   ‚Ä¢ Configuraci√≥n de aplicaciones")
    print()
    print("üìã PASOS REQUERIDOS:")
    print("1. Ir a https://portal.azure.com")
    print("2. Crear nueva aplicaci√≥n")
    print("3. Configurar permisos para Microsoft Graph")
    print("4. Obtener Client ID y Client Secret")
    print("5. Configurar redirect URI")
    print("6. Implementar flujo OAuth2 en el c√≥digo")
    print()
    print("‚è∞ TIEMPO ESTIMADO: 2-4 horas")
    print("üîÑ ¬øQuieres continuar con esta opci√≥n?")
    
    respuesta = input("(s/n): ").lower().strip()
    if respuesta in ['s', 'si', 's√≠', 'y', 'yes']:
        print("\nüìö Recursos para OAuth2:")
        print("‚Ä¢ https://docs.microsoft.com/en-us/graph/auth-v2-user")
        print("‚Ä¢ https://github.com/Azure-Samples/ms-identity-python-webapp")
        print("‚Ä¢ https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationsListBlade")
        print()
        print("üîß Despu√©s de configurar Azure, necesitar√°s:")
        print("‚Ä¢ Modificar email_sender.py para usar OAuth2")
        print("‚Ä¢ Implementar flujo de autenticaci√≥n")
        print("‚Ä¢ Manejar tokens de acceso")
        print()
        print("üí° RECOMENDACI√ìN: Considera usar Gmail por ahora")
        return False
    else:
        print("\n‚úÖ Opci√≥n cancelada. Volviendo al men√∫ principal.")
        return False

def cambiar_a_gmail():
    """Cambiar a cuenta Gmail"""
    
    print("\nüìß CAMBIO A CUENTA GMAIL")
    print("=" * 30)
    print()
    print("‚úÖ VENTAJAS DE GMAIL:")
    print("   ‚Ä¢ Autenticaci√≥n b√°sica habilitada")
    print("   ‚Ä¢ Configuraci√≥n simple")
    print("   ‚Ä¢ Funciona inmediatamente")
    print("   ‚Ä¢ L√≠mites generosos de env√≠o")
    print()
    print("üîß CONFIGURACI√ìN REQUERIDA:")
    print("1. Habilitar 'Acceso de aplicaciones menos seguras'")
    print("2. O usar contrase√±a de aplicaci√≥n (recomendado)")
    print("3. Configurar credenciales en el sistema")
    print()
    
    respuesta = input("¬øQuieres configurar Gmail? (s/n): ").lower().strip()
    if respuesta in ['s', 'si', 's√≠', 'y', 'yes']:
        print("\nüìã PASOS PARA GMAIL:")
        print("1. Ir a https://myaccount.google.com/security")
        print("2. Habilitar verificaci√≥n en dos pasos")
        print("3. Generar contrase√±a de aplicaci√≥n")
        print("4. Usar esa contrase√±a en el sistema")
        print()
        print("üìß SERVIDOR SMTP: smtp.gmail.com:587")
        print("üîë Usar contrase√±a de aplicaci√≥n, NO la contrase√±a normal")
        print()
        
        # Crear archivo de configuraci√≥n Gmail
        crear_config_gmail()
        return True
    else:
        print("\n‚úÖ Opci√≥n cancelada.")
        return False

def crear_config_gmail():
    """Crear archivo de configuraci√≥n para Gmail"""
    
    config_content = '''# Configuraci√≥n Gmail
GMAIL_EMAIL = "tu_email@gmail.com"
GMAIL_PASSWORD = "tu_app_password"
GMAIL_SMTP_SERVER = "smtp.gmail.com"
GMAIL_SMTP_PORT = 587

# Instrucciones:
# 1. Reemplaza tu_email@gmail.com con tu email real
# 2. Reemplaza tu_app_password con la contrase√±a de aplicaci√≥n
# 3. Guarda este archivo como .env
# 4. El sistema usar√° Gmail en lugar de Hotmail
'''
    
    try:
        with open('config_gmail.txt', 'w', encoding='utf-8') as f:
            f.write(config_content)
        print("‚úÖ Archivo config_gmail.txt creado")
        print("üìù Edita este archivo con tus credenciales de Gmail")
    except Exception as e:
        print(f"‚ùå Error creando archivo: {e}")

def verificar_app_password():
    """Verificar si hay App Password disponible"""
    
    print("\nüîë VERIFICACI√ìN DE APP PASSWORD")
    print("=" * 35)
    print()
    print("‚ÑπÔ∏è  INFORMACI√ìN:")
    print("   ‚Ä¢ App Password es una contrase√±a especial")
    print("   ‚Ä¢ Se genera cuando tienes 2FA habilitado")
    print("   ‚Ä¢ Permite acceso a aplicaciones")
    print()
    print("üîç VERIFICAR SI EST√Å DISPONIBLE:")
    print("1. Ir a https://account.live.com/proofs/AppPassword")
    print("2. Si tienes 2FA, podr√°s generar App Password")
    print("3. Si no tienes 2FA, no estar√° disponible")
    print()
    print("‚ö†Ô∏è  LIMITACI√ìN:")
    print("   ‚Ä¢ Solo funciona si tienes 2FA habilitado")
    print("   ‚Ä¢ Si no lo tienes, no podr√°s usar esta opci√≥n")
    print()
    
    respuesta = input("¬øTienes 2FA habilitado en tu cuenta Hotmail? (s/n): ").lower().strip()
    if respuesta in ['s', 'si', 's√≠', 'y', 'yes']:
        print("\n‚úÖ ¬°Excelente! Puedes usar App Password:")
        print("1. Ve a https://account.live.com/proofs/AppPassword")
        print("2. Genera una nueva contrase√±a de aplicaci√≥n")
        print("3. Usa esa contrase√±a en lugar de tu contrase√±a normal")
        print("4. El sistema deber√≠a funcionar")
        return True
    else:
        print("\n‚ùå Sin 2FA no puedes usar App Password")
        print("üí° OPCIONES DISPONIBLES:")
        print("   ‚Ä¢ Habilitar 2FA en tu cuenta Hotmail")
        print("   ‚Ä¢ Cambiar a cuenta Gmail")
        print("   ‚Ä¢ Configurar OAuth2 (complejo)")
        return False

def main():
    """Funci√≥n principal"""
    
    print("üöÄ SISTEMA DE CONFIGURACI√ìN DE EMAILS")
    print("=" * 50)
    print()
    
    while True:
        opcion = mostrar_instrucciones_oauth()
        
        if opcion == '1':
            configurar_oauth2()
        elif opcion == '2':
            if cambiar_a_gmail():
                print("\n‚úÖ Gmail configurado. El sistema est√° listo para usar Gmail.")
                break
        elif opcion == '3':
            verificar_app_password()
        elif opcion == '4':
            print("\nüëã ¬°Hasta luego!")
            break
        
        print("\n" + "="*50 + "\n")
    
    print("\nüìö RESUMEN DE SOLUCIONES:")
    print("‚Ä¢ OAuth2: Complejo, requiere Azure")
    print("‚Ä¢ Gmail: Simple, funciona inmediatamente")
    print("‚Ä¢ App Password: Solo si tienes 2FA")
    print()
    print("üí° RECOMENDACI√ìN: Usa Gmail por simplicidad")

if __name__ == "__main__":
    main()
